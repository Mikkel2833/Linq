#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OrderDB")]
	public partial class OrderDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustOrder(CustOrder instance);
    partial void UpdateCustOrder(CustOrder instance);
    partial void DeleteCustOrder(CustOrder instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    #endregion
		
		public OrderDataClassesDataContext() : 
				base(global::Linq.Properties.Settings.Default.OrderDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrderDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrderDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustOrder> CustOrders
		{
			get
			{
				return this.GetTable<CustOrder>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductNo;
		
		private string _ProdName;
		
		private string _Description;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _InStock;
		
		private EntitySet<OrderItem> _OrderItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductNoChanging(int value);
    partial void OnProductNoChanged();
    partial void OnProdNameChanging(string value);
    partial void OnProdNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnInStockChanging(System.Nullable<int> value);
    partial void OnInStockChanged();
    #endregion
		
		public Product()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductNo
		{
			get
			{
				return this._ProductNo;
			}
			set
			{
				if ((this._ProductNo != value))
				{
					this.OnProductNoChanging(value);
					this.SendPropertyChanging();
					this._ProductNo = value;
					this.SendPropertyChanged("ProductNo");
					this.OnProductNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdName", DbType="VarChar(25)")]
		public string ProdName
		{
			get
			{
				return this._ProdName;
			}
			set
			{
				if ((this._ProdName != value))
				{
					this.OnProdNameChanging(value);
					this.SendPropertyChanging();
					this._ProdName = value;
					this.SendPropertyChanged("ProdName");
					this.OnProdNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InStock", DbType="Int")]
		public System.Nullable<int> InStock
		{
			get
			{
				return this._InStock;
			}
			set
			{
				if ((this._InStock != value))
				{
					this.OnInStockChanging(value);
					this.SendPropertyChanging();
					this._InStock = value;
					this.SendPropertyChanged("InStock");
					this.OnInStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderItem", Storage="_OrderItems", ThisKey="ProductNo", OtherKey="ProductNo")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustNo;
		
		private string _CustName;
		
		private string _CustEMail;
		
		private string _Password;
		
		private string _Address;
		
		private string _Phone;
		
		private System.Nullable<int> _DiscountGroup;
		
		private System.Nullable<bool> _B2B;
		
		private EntitySet<CustOrder> _CustOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustNoChanging(int value);
    partial void OnCustNoChanged();
    partial void OnCustNameChanging(string value);
    partial void OnCustNameChanged();
    partial void OnCustEMailChanging(string value);
    partial void OnCustEMailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDiscountGroupChanging(System.Nullable<int> value);
    partial void OnDiscountGroupChanged();
    partial void OnB2BChanging(System.Nullable<bool> value);
    partial void OnB2BChanged();
    #endregion

    //public override string ToString()
    //{
    //    return CustNo +  " - " + CustName;
    //}
		
		public Customer()
		{
			this._CustOrders = new EntitySet<CustOrder>(new Action<CustOrder>(this.attach_CustOrders), new Action<CustOrder>(this.detach_CustOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustNo
		{
			get
			{
				return this._CustNo;
			}
			set
			{
				if ((this._CustNo != value))
				{
					this.OnCustNoChanging(value);
					this.SendPropertyChanging();
					this._CustNo = value;
					this.SendPropertyChanged("CustNo");
					this.OnCustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustName", DbType="VarChar(30)")]
		public string CustName
		{
			get
			{
				return this._CustName;
			}
			set
			{
				if ((this._CustName != value))
				{
					this.OnCustNameChanging(value);
					this.SendPropertyChanging();
					this._CustName = value;
					this.SendPropertyChanged("CustName");
					this.OnCustNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustEMail", DbType="VarChar(35)")]
		public string CustEMail
		{
			get
			{
				return this._CustEMail;
			}
			set
			{
				if ((this._CustEMail != value))
				{
					this.OnCustEMailChanging(value);
					this.SendPropertyChanging();
					this._CustEMail = value;
					this.SendPropertyChanged("CustEMail");
					this.OnCustEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(12)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(35)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(12)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountGroup", DbType="Int")]
		public System.Nullable<int> DiscountGroup
		{
			get
			{
				return this._DiscountGroup;
			}
			set
			{
				if ((this._DiscountGroup != value))
				{
					this.OnDiscountGroupChanging(value);
					this.SendPropertyChanging();
					this._DiscountGroup = value;
					this.SendPropertyChanged("DiscountGroup");
					this.OnDiscountGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2B", DbType="Bit")]
		public System.Nullable<bool> B2B
		{
			get
			{
				return this._B2B;
			}
			set
			{
				if ((this._B2B != value))
				{
					this.OnB2BChanging(value);
					this.SendPropertyChanging();
					this._B2B = value;
					this.SendPropertyChanged("B2B");
					this.OnB2BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustOrder", Storage="_CustOrders", ThisKey="CustNo", OtherKey="OrderCustNo")]
		public EntitySet<CustOrder> CustOrders
		{
			get
			{
				return this._CustOrders;
			}
			set
			{
				this._CustOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustOrders(CustOrder entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustOrders(CustOrder entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustOrder")]
	public partial class CustOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNo;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<decimal> _RabatPct;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<int> _OrderCustNo;
		
		private EntitySet<OrderItem> _OrderItems;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnRabatPctChanging(System.Nullable<decimal> value);
    partial void OnRabatPctChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnOrderCustNoChanging(System.Nullable<int> value);
    partial void OnOrderCustNoChanged();
    #endregion
		
		public CustOrder()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Date")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RabatPct", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> RabatPct
		{
			get
			{
				return this._RabatPct;
			}
			set
			{
				if ((this._RabatPct != value))
				{
					this.OnRabatPctChanging(value);
					this.SendPropertyChanging();
					this._RabatPct = value;
					this.SendPropertyChanged("RabatPct");
					this.OnRabatPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCustNo", DbType="Int")]
		public System.Nullable<int> OrderCustNo
		{
			get
			{
				return this._OrderCustNo;
			}
			set
			{
				if ((this._OrderCustNo != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCustNoChanging(value);
					this.SendPropertyChanging();
					this._OrderCustNo = value;
					this.SendPropertyChanged("OrderCustNo");
					this.OnOrderCustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustOrder_OrderItem", Storage="_OrderItems", ThisKey="OrderNo", OtherKey="OrderNo")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustOrder", Storage="_Customer", ThisKey="OrderCustNo", OtherKey="CustNo", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustOrders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustOrders.Add(this);
						this._OrderCustNo = value.CustNo;
					}
					else
					{
						this._OrderCustNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.CustOrder = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.CustOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemNo;
		
		private System.Nullable<int> _ProductNo;
		
		private System.Nullable<int> _OrderNo;
		
		private System.Nullable<int> _NumberOf;
		
		private EntityRef<CustOrder> _CustOrder;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNoChanging(int value);
    partial void OnItemNoChanged();
    partial void OnProductNoChanging(System.Nullable<int> value);
    partial void OnProductNoChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnNumberOfChanging(System.Nullable<int> value);
    partial void OnNumberOfChanged();
    #endregion
		
		public OrderItem()
		{
			this._CustOrder = default(EntityRef<CustOrder>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNo", DbType="Int")]
		public System.Nullable<int> ProductNo
		{
			get
			{
				return this._ProductNo;
			}
			set
			{
				if ((this._ProductNo != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductNoChanging(value);
					this.SendPropertyChanging();
					this._ProductNo = value;
					this.SendPropertyChanged("ProductNo");
					this.OnProductNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
		public System.Nullable<int> OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					if (this._CustOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf", DbType="Int")]
		public System.Nullable<int> NumberOf
		{
			get
			{
				return this._NumberOf;
			}
			set
			{
				if ((this._NumberOf != value))
				{
					this.OnNumberOfChanging(value);
					this.SendPropertyChanging();
					this._NumberOf = value;
					this.SendPropertyChanged("NumberOf");
					this.OnNumberOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustOrder_OrderItem", Storage="_CustOrder", ThisKey="OrderNo", OtherKey="OrderNo", IsForeignKey=true)]
		public CustOrder CustOrder
		{
			get
			{
				return this._CustOrder.Entity;
			}
			set
			{
				CustOrder previousValue = this._CustOrder.Entity;
				if (((previousValue != value) 
							|| (this._CustOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustOrder.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._CustOrder.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._OrderNo = value.OrderNo;
					}
					else
					{
						this._OrderNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderItem", Storage="_Product", ThisKey="ProductNo", OtherKey="ProductNo", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._ProductNo = value.ProductNo;
					}
					else
					{
						this._ProductNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
